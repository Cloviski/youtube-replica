version: '3.9'

services:
  restful_api:
    image: node:20.11.1
    container_name: restful-api
    networks:
      - app
    environment:
      SECRET: ${SECRET}
      USER_DATABASE: ${USER_DATABASE}
      PASSWORD_DATABASE: ${PASSWORD_DATABASE}
      DATABASE: ${DATABASE}
      HOST_DATABASE: 'host.docker.internal'
      PORT_DATABASE: ${PORT_DATABASE}
    working_dir: /app/api
    volumes:
      - .:/app
    ports:
      - '4000:4000'
    command: >
      sh -c "
        apk add --no-cache make gcc g++ python
        npm install
        npm rebuild bcrypt --build-from-source
        apk del make gcc g++ python
        npm run start:server
      "

  react_app:
    build:
      context: .
      dockerfile: Dockerfile.react
    container_name: react-app
    networks:
      - app
    environment:
      REACT_APP_API_KEY: ${REACT_APP_API_KEY}
    ports:
      - '3000:3000'
    stdin_open: true
    tty: true

  cypress:
    image: cypress/included:13.7.1
    working_dir: /e2e
    networks:
      - app
    environment:
      CYPRESS_baseUrl: 'http://localhost:3000'
      api_key: ${REACT_APP_API_KEY}
    volumes:
      - .:/e2e
    depends_on:
      - react_app

  jenkins-agent:
    build:
      context: .
      dockerfile: Dockerfile.agent
    privileged: true
    labels:
      - jenkins-agent-label=docker-node
    environment:
      JENKINS_URL: http://localhost:8080
      AGENT_NAME: docker-node
      JENKINS_AGENT_WORKDIR: /home/jenkins/agent
    networks:
      - jenkins

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    privileged: true
    restart: always
    volumes:
      - jenkins-data:/var/jenkins_home
      - jenkins-docker-certs:/certs/client:ro
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - '8080:8080'
      - '50000:50000'
    networks:
      - jenkins

  socat:
    image: alpine/socat
    networks:
      - jenkins
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - '127.0.0.1:2376:2375'
    restart: on-failure
    command: tcp-listen:2375,fork,reuseaddr unix-connect:/var/run/docker.sock

volumes:
  jenkins-data:
  jenkins-docker-certs:

networks:
  jenkins:
    driver: bridge
  app:
    driver: bridge


